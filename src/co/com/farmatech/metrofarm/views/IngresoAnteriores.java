
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.farmatech.metrofarm.views;

import co.com.farmatech.metrofarm.cmd.CmdCalibracion;
import co.com.farmatech.metrofarm.cmd.CmdCalificacion;
import co.com.farmatech.metrofarm.cmd.CmdMaintenance;
import co.com.farmatech.metrofarm.properties.AccessProperties;
import co.com.farmatech.metrofarm.utils.Formu_Fondo;
import co.com.farmatech.metrofarm.utils.UtilFarmatech;
import co.jankins.psf.common.enums.Frecuencias;
import co.jankins.psf.common.enums.TipoCalificacion;
import co.jankins.psf.common.enums.TipoEquipo;
import co.jankins.psf.common.enums.TipoMantenimiento;
import co.jankins.psf.common.global.GlobalUtils;
import com.co.farmatech.metrofarm.dto.DtoCalibracion;
import com.co.farmatech.metrofarm.dto.DtoCalificacion;
import com.co.farmatech.metrofarm.dto.DtoEquipo;
import com.co.farmatech.metrofarm.dto.DtoMantenimiento;
import com.co.farmatech.metrofarm.dto.DtoProgramCalificacion;
import com.co.farmatech.metrofarm.dto.DtoUsuario;
import com.co.farmatech.metrofarm.dto.DtoProveedor;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.codec.binary.Base64;
import org.apache.commons.io.FileUtils;
import ventana.bloqueo.VentanaBloqueo;

/**
 *
 * @author Bryan
 */
public class IngresoAnteriores extends javax.swing.JFrame {

    /**
     * Creates new form IngresoAnteriores
     */
    DtoEquipo equipo;
    String fecha;
    Date FechaActual;
    String[] Nodo;
    JFileChooser elegir = new JFileChooser();
    String Ruta = "";
    String RutaCalDise = "";
    String RutaCalInst = "";
    String RutaCalOper = "";
    String RutaCalDesemp = "";
    File NOAPLICA;
    Formu_Fondo fondo;
    DtoUsuario usuarioLogeado;
    CmdCalibracion cmdCalibracion;
    CmdMaintenance cmdMaintenance;
    CmdCalificacion cmdCalification;
    private final VentanaBloqueo ventana = new VentanaBloqueo();

    public IngresoAnteriores(DtoEquipo equipo) {
        initComponents();
        this.equipo = equipo;
        this.usuarioLogeado = GlobalUtils.getContext().getLoginUser();

        cmdCalibracion = new CmdCalibracion();
        cmdMaintenance = new CmdMaintenance();
        cmdCalification = new CmdCalificacion();

        Date now = new Date(System.currentTimeMillis());
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy");
        fecha = date.format(now);
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        FechaActual = formato.parse(fecha, new ParsePosition(0));
        dateChooserCombo1.setText(FechaActual.toString());
        dateChooserCombo2.setText(FechaActual.toString());
        dateChooserCombo8.setText(FechaActual.toString());
        dateChooserCombo9.setText(FechaActual.toString());
        NOAPLICA = UtilFarmatech.crearFile(AccessProperties.class.getResourceAsStream("NO.pdf"), "NO.pdf");
        jTabbedPane1.setBackground(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dateChooserCombo8 = new datechooser.beans.DateChooserCombo();
        jButton10 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        dateChooserCombo9 = new datechooser.beans.DateChooserCombo();
        jButton11 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de anteriores");
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setOpaque(true);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ultimo mantenimiento"));

        jLabel1.setText("Fecha ultimo mantenimiento");

        dateChooserCombo1.setCurrentView(new datechooser.view.appearance.AppearancesList("Dali",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    try {
        dateChooserCombo1.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2015, 6, 18),
            new java.util.GregorianCalendar(2015, 6, 18))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
    e1.printStackTrace();
    }

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/guardar.gif"))); // NOI18N
    jButton1.setText("Guardar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 419, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton1)))
            .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(15, 15, 15)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
            .addComponent(jButton1))
    );

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(131, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Mantenimiento", jPanel5);

    jPanel6.setBackground(new java.awt.Color(255, 255, 255));

    jPanel11.setBackground(new java.awt.Color(255, 255, 255));
    jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Ultima calibracion"));

    jLabel10.setText("Fecha");

    dateChooserCombo2.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));

jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/guardar.gif"))); // NOI18N
jButton2.setText("Guardar");
jButton2.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
    }
    });

    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/ver_pdf.gif"))); // NOI18N
    jButton7.setText("Adjuntar archivo");
    jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
    jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
        }
    });

    jLabel6.setForeground(new java.awt.Color(0, 0, 153));
    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
    jPanel11.setLayout(jPanel11Layout);
    jPanel11Layout.setHorizontalGroup(
        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel11Layout.createSequentialGroup()
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton7)
                    .addGap(0, 392, Short.MAX_VALUE))
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(176, 176, 176)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2)))
            .addContainerGap())
    );
    jPanel11Layout.setVerticalGroup(
        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel11Layout.createSequentialGroup()
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jButton7)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel6Layout.setVerticalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(116, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Calibracion", jPanel6);

    jPanel7.setBackground(new java.awt.Color(255, 255, 255));

    jPanel12.setBackground(new java.awt.Color(255, 255, 255));
    jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Últimas calificaciones"));

    jLabel2.setText("Fecha Calificación Diseño");

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/guardar.gif"))); // NOI18N
    jButton3.setText("Guardar");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/ver_pdf.gif"))); // NOI18N
    jButton8.setText("Adjuntar archivo");
    jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
    jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton8ActionPerformed(evt);
        }
    });

    jLabel7.setForeground(new java.awt.Color(0, 0, 153));
    jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    jLabel8.setForeground(new java.awt.Color(0, 0, 153));
    jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    jLabel9.setText("Fecha calificación instalacion ");

    jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/ver_pdf.gif"))); // NOI18N
    jButton9.setText("Adjuntar archivo");
    jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
    jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });

    jLabel11.setForeground(new java.awt.Color(0, 0, 153));
    jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    jLabel12.setText("Fecha Calificación Operación");

    dateChooserCombo8.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));

jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/ver_pdf.gif"))); // NOI18N
jButton10.setText("Adjuntar archivo");
jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
jButton10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
jButton10.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton10ActionPerformed(evt);
    }
    });

    jLabel13.setText("Fecha Calificación Desempeño");

    dateChooserCombo9.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));

jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/com/farmatech/metrofarm/resources/imagenes/ver_pdf.gif"))); // NOI18N
jButton11.setText("Adjuntar archivo");
jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
jButton11.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
jButton11.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton11ActionPerformed(evt);
    }
    });

    jLabel14.setForeground(new java.awt.Color(0, 0, 153));
    jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    jLabel15.setForeground(new java.awt.Color(0, 0, 153));
    jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    jLabel16.setForeground(new java.awt.Color(0, 0, 153));
    jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
    jPanel12.setLayout(jPanel12Layout);
    jPanel12Layout.setHorizontalGroup(
        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                    .addComponent(jLabel13)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(dateChooserCombo9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                    .addComponent(jLabel12)
                    .addGap(18, 18, 18)
                    .addComponent(dateChooserCombo8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel9))
                    .addGap(201, 201, 201)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton8)
                        .addComponent(jButton9))))
            .addGap(10, 10, 10)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 5, Short.MAX_VALUE)))))
                    .addContainerGap())
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );
    jPanel12Layout.setVerticalGroup(
        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addComponent(jButton9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton8)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton10))
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dateChooserCombo8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                            .addGap(34, 34, 34)
                                            .addComponent(jLabel9)))
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                            .addGap(36, 36, 36)
                                            .addComponent(jLabel12))))
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton3))
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(dateChooserCombo9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton11))
                    .addGap(0, 0, Short.MAX_VALUE))))
    );

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    jTabbedPane1.addTab("Calificaciones", jPanel7);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 806, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 321, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 17, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE)))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        adjuntarArchivoCalOper();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        adjuntarArchivoCalDise();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        adjuntarArchivoCalInst();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // TODO add your handling code here:
        ventana.bloquear(this);
        SwingWorker worker;
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                grabarCalificaciones();
                ventana.desbloquear();
                return null;
            }
        };
        worker.execute();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        adjuntarArchivo();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // TODO add your handling code here:
        ventana.bloquear(this);
        SwingWorker worker;
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                grabarCalibracion();
                ventana.desbloquear();
                return null;
            }
        };
        worker.execute();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ventana.bloquear(this);
        SwingWorker worker;
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                insertarMantenimientoAnterior();
                ventana.desbloquear();
                return null;
            }
        };
        worker.execute();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        adjuntarArchivoCalDesemp();
    }//GEN-LAST:event_jButton11ActionPerformed

    public void grabarCalibracion() throws ParseException {

        File archivo = null;
        DateFormat formatter = new SimpleDateFormat("dd/MM/yy"); //El formato en el que obtenemos la fecha inicialmente
        Date date = (Date) formatter.parse(dateChooserCombo2.getText()); //Se le pasa la fecha a la que queremos darle formato
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy"); //Formato en que desamos la fecha
        String fechaConFormato = formato.format(date); //Obtenemos la fecha ya con el formato.
        Date Fechacal = formato.parse(fechaConFormato, new ParsePosition(0));

        if (Fechacal != null) {
            if (FechaActual != null) {
                if (Fechacal.after(FechaActual)) {
                    JOptionPane.showMessageDialog(this, "No puedes ingresar calibraciones con una fecha mayor a la de hoy", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (equipo.getFrecCalibracion().equals(Frecuencias.NOAPLICA.getCode())) {
                    JOptionPane.showMessageDialog(null, "Este equipo no tiene asignada una frecuencia de calibración");
                    return;
                }
            }



            if (!Ruta.equals("")) {
                archivo = new File(Ruta);
            }

            Calendar cal = Calendar.getInstance();
            cal.setTime(Fechacal);
            cal.add(Calendar.MONTH, equipo.getFrecCalibracion().intValue());    //Adding 1 month to current date

            if (archivo == null) {
                JOptionPane.showMessageDialog(null, "Es obligatorio adjuntar un documento a esta calibración", "METROFARM", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    DtoCalibracion calib = new DtoCalibracion();
                    calib.setProximaCalibracion(cal.getTime());
                    calib.setPrecio(new BigDecimal(0.0));
                    calib.setFechaRegistro(Fechacal);
                    calib.setEquipo(equipo);
                    calib.setDivision("");
                    calib.setExactitud("");
                    calib.setValMaximo("");
                    calib.setValMininmo("");
                    calib.setRangCalibracion("");
                    calib.setRangTrabajo("");
                    DtoProveedor proveedor = new DtoProveedor();
                    proveedor.setNombre("");
                    calib.setProveedor("");
                    calib.setArchivo(FileUtils.readFileToByteArray(archivo));

                    boolean result = cmdCalibracion.createCalibration(calib);

                    if (result == true) {
                        JOptionPane.showMessageDialog(this, " Calibracion ingresada", "METROFARM", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, " No fue posible ingresar la nueva calibración.", "METROFARM", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes escoger la fecha del ultimo mantenimiento");
        }
    }

    public void grabarCalificaciones() throws ParseException, IOException {
        DateFormat formatter = new SimpleDateFormat("dd/MM/yy"); //El formato en el que obtenemos la fecha inicialmente
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy"); //Formato en que desamos la fecha

        Date dateCalO = (Date) formatter.parse(dateChooserCombo8.getText()); //Se le pasa la fecha a la que queremos darle formato
        Date dateCalD = (Date) formatter.parse(dateChooserCombo9.getText()); //Se le pasa la fecha a la que queremos darle formato

        String fechaCalOConFormato = formato.format(dateCalO); //Obtenemos la fecha ya con el formato.
        String fechaCalDConFormato = formato.format(dateCalD); //Obtenemos la fecha ya con el formato.
        Date FechacalO = formato.parse(fechaCalOConFormato, new ParsePosition(0));
        Date FechacalD = formato.parse(fechaCalDConFormato, new ParsePosition(0));



        if (FechacalO != null && FechacalD != null) {
            if (FechaActual != null) {
                if (FechacalO.after(FechaActual) || FechacalD.after(FechaActual)) {
                    JOptionPane.showMessageDialog(this, "No puedes ingresar calificaciones con una fecha mayor a la de hoy", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (equipo.getFrecCalifOPerativa().equals(Frecuencias.NOAPLICA.getCode()) && !RutaCalOper.equals("")) {
                    JOptionPane.showMessageDialog(null, "Este equipo no tiene asignada una frecuencia de calificacion de operación");
                    return;
                }
                if (equipo.getFrecCalifDesempenio().equals(Frecuencias.NOAPLICA.getCode()) && !RutaCalDesemp.equals("")) {
                    JOptionPane.showMessageDialog(null, "Este equipo no tiene asignada una frecuencia de calificacion de desempeño");
                    return;
                }

            }

            //Calculamos la proxima calificacion de operacion
            Calendar calO = Calendar.getInstance();
            calO.setTime(FechacalO);
            calO.add(Calendar.MONTH, equipo.getFrecCalifOPerativa().intValue());//sumamos la frecuencia para que calcule el proximo

            //Calculamos la proxima calificacion de desempeño
            Calendar calD = Calendar.getInstance();
            calD.setTime(FechacalD);
            calD.add(Calendar.MONTH, equipo.getFrecCalifDesempenio().intValue());//sumamos la frecuencia para que calcule el proximo


            String Faltan = "Las siguientes calificaciones no han sido adjuntadas por lo tanto se almacenaran vacias \n";
            boolean falta = false;
            DtoCalificacion calificacionSend = new DtoCalificacion();
            calificacionSend.setEquipo(equipo);

            ArrayList<DtoProgramCalificacion> arrayProgCalif = new ArrayList<DtoProgramCalificacion>();

            if (RutaCalDise.equals("")) {
                falta = true;
                Faltan += "*Diseño \n";
                calificacionSend.setFileDiseno(FileUtils.readFileToByteArray(NOAPLICA));
            } else {
                try {
                    calificacionSend.setFileDiseno(FileUtils.readFileToByteArray(new File(RutaCalDise)));
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (RutaCalInst.equals("")) {
                falta = true;
                Faltan += "*Instalación \n";
                calificacionSend.setFileInstalacion(FileUtils.readFileToByteArray(NOAPLICA));
            } else {
                try {
                    calificacionSend.setFileInstalacion(FileUtils.readFileToByteArray(new File(RutaCalInst)));
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (RutaCalOper.equals("")) {
                falta = true;
                Faltan += "*Operación \n";
                calificacionSend.setFileOperacion(FileUtils.readFileToByteArray(NOAPLICA));
            } else {
                try {
                    calificacionSend.setFileOperacion(FileUtils.readFileToByteArray(new File(RutaCalOper)));
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (RutaCalDesemp.equals("")) {
                falta = true;
                Faltan += "*Desempeño \n";
                calificacionSend.setFiledesempeno(FileUtils.readFileToByteArray(NOAPLICA));
            } else {
                try {
                    calificacionSend.setFiledesempeno(FileUtils.readFileToByteArray(new File(RutaCalDesemp)));
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (falta == true) {
                int respuesta = JOptionPane.showConfirmDialog(null, Faltan, "Farmatech", JOptionPane.YES_NO_OPTION);
                switch (respuesta) {
                    case JOptionPane.YES_OPTION:
                        falta = false;
                        break;
                    case JOptionPane.NO_OPTION:
                        break;
                }
            }

            if (falta == false) {
                if (!RutaCalOper.equals("")) {
                    DtoProgramCalificacion dtoprogramCalifOper = new DtoProgramCalificacion();
                    dtoprogramCalifOper.setEquipo(equipo);
                    dtoprogramCalifOper.setFechaRegistro(FechacalO);
                    dtoprogramCalifOper.setFechaProxima(calO.getTime());
                    dtoprogramCalifOper.setTipoCalificacion(TipoCalificacion.CALIFICACION_OPERACION.getCode());
                    dtoprogramCalifOper.setCumplimiento(0);
                    arrayProgCalif.add(dtoprogramCalifOper);
                }
                if (!RutaCalDesemp.equals("")) {
                    DtoProgramCalificacion dtoprogramCalifDesem = new DtoProgramCalificacion();
                    dtoprogramCalifDesem.setEquipo(equipo);
                    dtoprogramCalifDesem.setFechaRegistro(FechacalD);
                    dtoprogramCalifDesem.setFechaProxima(calD.getTime());
                    dtoprogramCalifDesem.setTipoCalificacion(TipoCalificacion.CALIFICACION_DESEMPENIO.getCode());
                    dtoprogramCalifDesem.setCumplimiento(0);
                    arrayProgCalif.add(dtoprogramCalifDesem);
                }
                calificacionSend.setProgramCalif(arrayProgCalif);
                boolean result = cmdCalification.createFirstCalification(calificacionSend);

                if (result == false) {
                    JOptionPane.showMessageDialog(this, " No fue posible ingresar las nuevas calificaciones.", "METROFARM", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, " Calificaciones ingresadas", "METROFARM", JOptionPane.INFORMATION_MESSAGE);
                    RutaCalInst = "";
                    RutaCalDise = "";
                    RutaCalOper = "";
                    RutaCalDesemp = "";
                    jLabel7.setText("");
                    jLabel8.setText("");
                    jLabel15.setText("");
                    jLabel16.setText("");
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debes escoger la fecha de la ultima calificación de operación y desempeño.");
        }

    }

    public void adjuntarArchivo() {
        this.Ruta = "";

        FileNameExtensionFilter filtrer = new FileNameExtensionFilter("Archivos pdf", "pdf");
        elegir.setFileFilter(filtrer);
        elegir.setMultiSelectionEnabled(false);
        elegir.setAcceptAllFileFilterUsed(false);
        int returnVal = elegir.showDialog(this, "Cargar");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = elegir.getSelectedFile();
            String direccion = file.getPath();
            this.Ruta = direccion;

            JOptionPane.showMessageDialog(null, "usted ha cargado " + file.getName());
            jLabel6.setText(file.getName());

        } else {
            System.out.println("Carga cancelada por el usuario");
        }

    }

    public void adjuntarArchivoCalDise() {
        this.RutaCalDise = "";

        FileNameExtensionFilter filtrer = new FileNameExtensionFilter("Archivos pdf", "pdf");
        elegir.setFileFilter(filtrer);
        elegir.setMultiSelectionEnabled(false);
        elegir.setAcceptAllFileFilterUsed(false);
        int returnVal = elegir.showDialog(this, "Cargar");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = elegir.getSelectedFile();
            String direccion = file.getPath();
            this.RutaCalDise = direccion;

            JOptionPane.showMessageDialog(null, "usted ha cargado " + file.getName());
            jLabel7.setText(file.getName());

        } else {
            System.out.println("Carga cancelada por el usuario");
        }

    }

    public void adjuntarArchivoCalInst() {
        this.RutaCalInst = "";

        FileNameExtensionFilter filtrer = new FileNameExtensionFilter("Archivos pdf", "pdf");
        elegir.setFileFilter(filtrer);
        elegir.setMultiSelectionEnabled(false);
        elegir.setAcceptAllFileFilterUsed(false);
        int returnVal = elegir.showDialog(this, "Cargar");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = elegir.getSelectedFile();
            String direccion = file.getPath();
            this.RutaCalInst = direccion;

            JOptionPane.showMessageDialog(null, "usted ha cargado " + file.getName());
            jLabel14.setText(file.getName());

        } else {
            System.out.println("Carga cancelada por el usuario");
        }

    }

    public void adjuntarArchivoCalOper() {
        this.RutaCalOper = "";

        FileNameExtensionFilter filtrer = new FileNameExtensionFilter("Archivos pdf", "pdf");
        elegir.setFileFilter(filtrer);
        elegir.setMultiSelectionEnabled(false);
        elegir.setAcceptAllFileFilterUsed(false);
        int returnVal = elegir.showDialog(this, "Cargar");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = elegir.getSelectedFile();
            String direccion = file.getPath();
            this.RutaCalOper = direccion;

            JOptionPane.showMessageDialog(null, "usted ha cargado " + file.getName());
            jLabel15.setText(file.getName());
        } else {
            System.out.println("Carga cancelada por el usuario");
        }
    }

    public void adjuntarArchivoCalDesemp() {
        this.RutaCalDesemp = "";

        FileNameExtensionFilter filtrer = new FileNameExtensionFilter("Archivos pdf", "pdf");
        elegir.setFileFilter(filtrer);
        elegir.setMultiSelectionEnabled(false);
        elegir.setAcceptAllFileFilterUsed(false);
        int returnVal = elegir.showDialog(this, "Cargar");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = elegir.getSelectedFile();
            String direccion = file.getPath();
            this.RutaCalDesemp = direccion;

            JOptionPane.showMessageDialog(null, "usted ha cargado " + file.getName());
            jLabel16.setText(file.getName());

        } else {
            System.out.println("Carga cancelada por el usuario");
        }

    }

    public void insertarMantenimientoAnterior() {
        try {
            DateFormat formatter = new SimpleDateFormat("dd/MM/yy"); //El formato en el que obtenemos la fecha inicialmente
            Date date = (Date) formatter.parse(dateChooserCombo1.getText()); //Se le pasa la fecha a la que queremos darle formato
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy"); //Formato en que desamos la fecha
            String fechaConFormato = formato.format(date); //Obtenemos la fecha ya con el formato.
            Date Fechamant = formato.parse(fechaConFormato, new ParsePosition(0));

            if (Fechamant != null) {
                if (FechaActual != null) {
                    if (Fechamant.after(FechaActual)) {
                        JOptionPane.showMessageDialog(this, "No puedes ingresar mantenimientos con una fecha mayor a la de hoy", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    if (equipo.getFrecMantenimiento().equals(Frecuencias.NOAPLICA.getCode())) {
                        JOptionPane.showMessageDialog(null, "Este equipo/instrumento no tiene asignada una frecuencia de mantenimiento");
                        return;
                    }

                }
                Calendar cal = Calendar.getInstance();
                cal.setTime(Fechamant);
                cal.add(Calendar.MONTH, equipo.getFrecMantenimiento().intValue());    //Adding 1 month to current date
//              ntenimiento,precioMantenimiento FROM MantenimientoEquipos WHERE UPPER(equipoMantenimiento)=UPPER(?)

                DtoMantenimiento mant = new DtoMantenimiento();
                mant.setEquipo(equipo);
                mant.setTipoMant(TipoMantenimiento.PROGRAMADO.getCode());
                mant.setFechaProximo(cal.getTime());
                mant.setResponsable("");
                mant.setRecibido("");
                mant.setRegistrado(usuarioLogeado);
                mant.setAnomalias("");
                mant.setLabores("");
                mant.setObservaciones("");
                mant.setProovedores("");
                mant.setFechaRegistro(Fechamant);
                mant.setFechaProximo(cal.getTime());
                mant.setPrecio(new BigDecimal(0.0));

                boolean result = false;

                if (mant.getEquipo().getTipo().equals(TipoEquipo.INSTRUMENTO.getCode())) {
                    result = cmdMaintenance.createFirstMaintenanceInstrument(mant);
                } else {
                    result = cmdMaintenance.createFirstMaintenanceGeneral(mant);
                }

                if (result == true) {
                    JOptionPane.showMessageDialog(this, " Mantenimiento ingresado", "METROFARM", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, " No fue posible ingresar el nuevo mantenimiento.", "METROFARM", JOptionPane.ERROR_MESSAGE);
                }


            } else {
                JOptionPane.showMessageDialog(null, "Debes elegir la fecha del último mantenimiento");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }

    public boolean validar() {
        boolean sw = false;

        return sw;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private datechooser.beans.DateChooserCombo dateChooserCombo8;
    private datechooser.beans.DateChooserCombo dateChooserCombo9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
